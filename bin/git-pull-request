#!/usr/bin/env ruby

#   TODO
#
#   * Extract functions for readability
#
#   * Better preconditions. need to validate
#     1. Existance of Pivotal and GitHub environment variables
#     2. Format of branch name
#
#   * Better error handling for failed pulled requests. Should 
#     probably parse the JSON error response and translate into
#     a user-friendly message.
#
#   * Maybe look at making the '-f' option on the push command 
#     optional

require 'rest-client'
require 'json'

current_branch = `git rev-parse --abbrev-ref HEAD`.chomp
`git push -f origin #{current_branch}`

story_id = current_branch.split('/')[1]
story_json = RestClient.get(
    "https://www.pivotaltracker.com/services/v5/stories/#{story_id}", 
    'X-TrackerToken' => ENV['PIVOTAL_TOKEN'])
story = JSON(story_json)

tracking_branch = `git branch -vv | grep "*"`
    .match(/^.*\[(\w+)[:\]].*/)
    .captures[0]

repo = `git remote -v | grep push`
    .split(/\s/)[1]
    .match(/^.*:(.*)\.git$/)
    .captures[0]

pr_url="https://api.github.com/repos/#{repo}/pulls"
payload = { 'title' => "[##{story_id}] #{story['name']}",
            'body' => story['description'],
            'head' => "the-container-store:#{current_branch}",
            'base' => 'the-container-store:master'}.to_json

github_token = ENV['GITHUB_TOKEN']
pull_request_json = RestClient.post pr_url, payload, 'Authorization' => "token #{github_token}"
pull_request = JSON(pull_request_json)
`open #{pull_request['html_url']}` # this will only work on Mac for now
