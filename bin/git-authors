#!/usr/bin/env bash

list=0
no_email=0
output=""
file=""

if [[ $# = 1 ]] && [[ "$1" = "--no-email" ]]; then
  echo >&2 "--no-email option only can be used with --list | -l | --output"
  exit 1
fi

#
# list authors sorted by number of commits (descending).
#
authors() {
  if [[ $no_email = 1 ]]; then
    # email will be used to uniq authors.
    git shortlog HEAD -sne | awk '{$1=""; sub(" ", ""); print}' | awk -F'<' '!x[$1]++' | awk -F'<' '!x[$2]++' \
      | awk -F'<' '{gsub(/ +$/, "", $1); print $1}'
  else
    git shortlog HEAD -sne | awk '{$1=""; sub(" ", ""); print}' | awk -F'<' '!x[$1]++' | awk -F'<' '!x[$2]++'
  fi
}

if [[ -z "$file" ]]; then
  file=$(find . -mindepth 1 -maxdepth 1 -iregex '.*\(authors\|contributors\).*' | head -n1)
  if [[ -z "$file" ]]; then
    file="AUTHORS"
  fi
fi

if [[ $# = 0 ]]; then
  authors >> "$file"
  exit 0
fi

while [[ $# -gt 0 ]]; do
  case $1 in
    -l|--list )
      list=1
      ;;
    --no-email )
      no_email=1
      ;;
    --output )
      if [[ -n $2 ]] && [[ $2 =~ ^[a-zA-Z] ]]; then
        output=$2
        shift
      else
        echo >&2 "option $1 requires a letter prefix value"
        exit 1
      fi
      ;;
    * )
      break
  esac
  shift
done

if [[ -n "$output" ]]; then
  authors >> "$output"
  exit 0
fi

if [[ $list = 1 ]]; then
  authors
  exit 0
fi
