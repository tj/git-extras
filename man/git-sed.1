.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GIT\-SED" "1" "May 2018" "" "Git Extras"
.
.SH "NAME"
\fBgit\-sed\fR \- replace patterns in git\-controlled files
.
.SH "SYNOPSIS"
\fBgit\-sed\fR [ \-c ] [ \-f \fIflags\fR ] \fIsearch\fR \fIreplacement\fR [ \fIflags\fR ]
.
.SH "DESCRIPTION"
Run git grep and then send results to sed for replacement with the given flags, if they are provided via \-f or as the third argument\.
.
.P
Also runs git commit if \-c is provided\.
.
.SH "OPTIONS"
\-c
.
.P
commit the resulting changes with a standard commit message detailing the exact command ran\. will fail if there are unstaged changes\.
.
.P
<flags> \-f <flags>
.
.P
will use the given regex flags in the sed command (for example "g" replaces multiple times on the same line)\.
.
.P
<search>
.
.P
the pattern passed to grep and to the first part of the sed expression\.
.
.P
<replacement>
.
.P
the replacement passed to sed, the second part of the sed expression\.
.
.SH "EXAMPLES"
.
.nf

$ git sed \'my_function\' \'do_stuff\'
# \.\.\. only does the changes, without committing
$ git commit \-m"use proper function name"
$ git sed \-c \'do_stuff\' \'stuff\'
# \.\. does the changes and a commit
$ git sed \-f g do_stuff stuff
# \.\. g is actually pretty important, otherwise you will miss some
# stuff!
.
.fi
.
.SH "AUTHOR"
Written by Antoine Beaupr√© <\fIanarcat@debian\.org\fR> from inspiration by https://github\.com/da\-x/git\-search\-replace and http://stackoverflow\.com/questions/9651898/is\-there\-a\-git\-sed\-or\-equivalent
.
.SH "REPORTING BUGS"
<\fIhttps://github\.com/tj/git\-extras/issues\fR>
.
.SH "SEE ALSO"
<\fIhttps://github\.com/tj/git\-extras\fR>
